<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd"
       default-autowire="byName">

  <!--
    该注解驱动的作用：
    1.默认加载JSON转换器
    2.默认加载处理器映射器和处理器适配器
  -->
  <mvc:annotation-driven/>

  <!-- 用于支持访问静态资源，因为dispatcher的url映射配置的"/" -->
  <mvc:default-servlet-handler/>
  <!-- 上面等价于配置静态资源的映射不经过前端控制器 -->
  <!--
  <mvc:resources mapping="/assets/**" location="/assets/"/>
  -->

  <!-- 只扫描Controller -->
  <context:component-scan base-package="com.jd.secondproject.web.controller"/>

  <!-- 读取配置文件用于Controller中的属性注入 -->
  <context:property-placeholder location="classpath:conf/controllerConfig.properties"/>

  <!-- velocity模板配置和视图解析器配置 -->
  <bean id="velocityConfigurer"
        class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
    <!-- 所有的vm模板文件都放在此目录内 -->
    <property name="resourceLoaderPath" value="/WEB-INF/vm/"/>
    <property name="configLocation" value="classpath:conf/velocity.properties"/>
  </bean>
  <bean id="velocityViewResolver"
        class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
    <property name="cache" value="false"/><!--是否缓存模板 -->
    <property name="prefix" value="/"/><!-- 可省默认值，不要更改-->
    <property name="suffix" value=".vm"/>
    <property name="contentType" value="text/html;charset=UTF-8"/>
    <property name="dateToolAttribute" value="dateTool"/><!--日期函数名称 -->
    <property name="numberToolAttribute" value="numberTool"/><!--数字函数名称 -->
    <property name="exposeSpringMacroHelpers" value="true"/><!--是否使用spring对宏定义的支持 -->
    <property name="exposeRequestAttributes" value="true"/><!--是否开放request属性 -->
    <property name="requestContextAttribute" value="rc"/><!--request属性引用名称 -->
    <!-- 相对于resourceLoaderPath的路径 -->
    <property name="layoutUrl" value="layout/default.vm"/>
    <property name="order" value="2"/> <!--权重-->
    <property name="toolboxConfigLocation" value="/WEB-INF/tools.xml"/>
  </bean>

  <!-- 文件上传：前端页面如果是表单，则表单需要配置multipart/form-data -->
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <property name="defaultEncoding" value="UTF-8"/>
      <property name="maxUploadSize" value="400000000"/>
  </bean>

  <!-- 拦截器 -->
  <mvc:interceptors>
    <!--多个拦截器,顺序执行 -->
    <mvc:interceptor>
      <!-- /**表示所有url包括子url路径 -->
      <mvc:mapping path="/**"/>
      <mvc:exclude-mapping path="/assets/**"/>
      <mvc:exclude-mapping path="/css/**"/>
      <mvc:exclude-mapping path="/js/**"/>
      <bean class="com.jd.secondproject.interceptor.HandlerInterceptor1"/>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**"/>
      <mvc:exclude-mapping path="/assets/**"/>
      <mvc:exclude-mapping path="/css/**"/>
      <mvc:exclude-mapping path="/js/**"/>
      <bean class="com.jd.secondproject.interceptor.HandlerInterceptor2"/>
      <!-- 这样引用拦截器也可以
      <bean ref="beanId"/>
      -->
    </mvc:interceptor>
  </mvc:interceptors>

  <!-- 如果有自定义参数绑定，需加上以下代码
  <mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>
  <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    <property name="converters">
      <set>
        <bean class="com.jd.secondproject.converter.CustomDateConverter"/>
        <bean class=".."/>
      </set>
    </property>
  </bean>
  -->

  <!-- exception related -->
  <!-- all exception handler will be registered by DispatcherServlet default (detectAllHandlerExceptionResolvers=true) -->
  <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    <property name="defaultErrorView" value="error/error" />
    <property name="exceptionMappings">
      <props>
        <prop key="java.lang.Exception">error/error-500</prop>
        <prop key="java.lang.Throwable">error/error-500</prop>
      </props>
    </property>
  </bean>


</beans>